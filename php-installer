#!/usr/bin/env bash

OS=$(uname)
SUDO=$(which sudo)
APT_GET=$(which apt-get)

# Execute from root {{{
if [ `id -u` -eq 0 ] ; then
  EXECUTE_FROM_ROOT=""
elif [ -x "$SUDO" ] ; then
  EXECUTE_FROM_ROOT="sudo"
else
  EXECUTE_FROM_ROOT="su -c"
fi
# }}}

function command_exists() { # {{{
  COMMAND_NAME=$1
  COMMAND_PATH=$(which $COMMAND_NAME)

  if [ ! -x "$COMMAND_PATH" ]; then
    echo "$COMMAND_NAME: command not found in your $OS system"

    if [ -x "$APT_GET" ]; then
      echo " - try execute: $EXECUTE_FROM_ROOT apt-get install $COMMAND_NAME"
    fi
    exit 1
  fi
} # }}}

# Check commands {{{
  command_exists ls
  command_exists cp
  command_exists ps
  command_exists tr
  command_exists wc
  command_exists cat
  command_exists awk
  command_exists tar
  command_exists sed
  command_exists curl
  command_exists find
  command_exists grep
  command_exists make
  command_exists mkdir
  command_exists touch
  command_exists dirname
  command_exists basename
  command_exists realpath
# }}}

NAME=$(basename $0)
SCRIPT=$(realpath $0)
SCRIPT_DIR=$(dirname $SCRIPT)

SCRIPT_ACTION=$1
SCRIPT_SUB_ACTION=$2
declare -A SCRIPT_OPTIONS

for ARG in "$@"
do
  case "${ARG}" in
    --*)
      KEY="$(echo ${ARG} | tr -d '-' | tr '[:upper:]' '[:lower:]')"
      SCRIPT_OPTIONS[$KEY]=true
    ;;
  esac
done

. $SCRIPT_DIR/environment

function show_installed() { # {{{
  echo "List of installed PHP versions:"
  find $INSTALLATION_DIR/* -iname "$PHP_NAME*" -type d -prune
} # }}}

function show_version() { # {{{
  echo "PHP Version: $PHP_VERSION"
} # }}}

function change_version() { # {{{
  if [ $# -eq 1 ]; then
    validate_version $1
    echo $1 > $VERSION_FILE || exit 1
  else
    echo -n "Enter PHP version [$PHP_VERSION]: "
    while read INPUTTED_VERSION
    do
      validate_version $INPUTTED_VERSION
      echo -n "Change PHP version to $INPUTTED_VERSION ... "
      echo $INPUTTED_VERSION > $VERSION_FILE || echo "[ Error ]" && echo "[ OK ]"
      break
    done
  fi
} # }}}

function switch_php() { # {{{
  . $SCRIPT_DIR/switch
} # }}}

function update_php() { # {{{
  switch_php
  . $SCRIPT_DIR/update
} # }}}

function configure_php() { # {{{
  . $SCRIPT_DIR/configure
} # }}}

function install_php_all() { # {{{
  . $SCRIPT_DIR/install fpm intl mbstring ctype fileinfo filter json phar posix session sockets readline tokenizer libxml xml simplexml xsl exif soap shmop calendar zts ftp zip curl iconv zlib regex mhash openssl mysql mysqli pdo-mysql gd png freetype jpeg vpx xmp opcache mcrypt
} # }}}

function install_php_custom() { # {{{
  PHP_MODULES=$@
  . $SCRIPT_DIR/install $PHP_MODULES
} # }}}

function install_extension() { # {{{
  . $SCRIPT_DIR/extension
} # }}}

function delete_php() { # {{{
  . $SCRIPT_DIR/delete
} # }}}

function setup_php() { # {{{
  . $SCRIPT_DIR/setup
} # }}}

function show_help() { # {{{
  echo "-------------------------------------------------------"
  echo " Script for easy installation more one version of PHP. "
  echo "-------------------------------------------------------"
  echo "Author:   $AUTHOR"
  echo "Version:  $VERSION"
  echo ""
  echo "Commands:"
  echo "  list       - show list of installed versions of PHP"
  echo "  show       - show used version of PHP"
  echo "  change     - change build version of PHP"
  echo "  switch     - switch to current version of PHP"
  echo "  update     - switch to current version of PHP and restart PHP-FPM"
  echo "  install    - installation of selected version of PHP"
  echo "  extension  - show menu for work with extensions of PHP"
  echo "  configure  - create configuration files of PHP"
  echo "  delete     - delete of selected version of PHP"
  echo "  setup      - setup needed package for PHP compilation"
  echo "  help       - show this message"
} # }}}

case "$SCRIPT_ACTION" in
  list)
    show_installed
  ;;
  show)
    show_version
  ;;
  change)
    change_version $2
  ;;
  switch)
    switch_php
  ;;
  update)
    update_php
  ;;
  install)
    if [ $# -gt 1 ]; then
      install_php_custom $@
    else
      install_php_all;
    fi
  ;;
  extension)
    install_extension
  ;;
  configure)
    configure_php
  ;;
  delete)
    delete_php
  ;;
  setup)
    setup_php
  ;;
  help)
    show_help
  ;;
  *)
    echo "Usage: $NAME {list|show|change|switch|update|install|extension|configure|delete|setup|help}"
  ;;
esac
